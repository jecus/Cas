<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="_operatorInfoReference.UpperLeftIcon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAYAAAByDd+UAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAQASURBVEhLrZZrV1JbFIb9Cf2k81P8KdYZdapTo3Mq
        M1BBK1Hxfr8rICggsLmDoOKtyzfrW+mHt/ku9qa1YUdazjHmyDZ7rWfNd1726riO3b13v1PcK26Io8n5
        jL/xnTvmkpsbF4t3iV+IwzvwBtMzc4jsRBGO7CC0HUEgFIZ/bALuXo8F57tcczOwLPhLvPbPw38xO7eA
        6sEhascnODg8QqV6gNJ+BYVSGbl8EZlsHkY6i93YHoZ8o7j/4BHBNe5hbtfe5EVKg4HBtzg8quH49AxH
        tWMbLF8sIZsvIC2wlMASKQOxvSR2onEEgmF097isiDvNbZ3Ngs3NL+Ls/D2OT05xKLCqwPYJK5uwnMAy
        OYFlsJf8AduO7CIoUm8Ft9Hb720PlR8oI8YnpnB6dq4kZIQVkbNcqaJY3keuYEqYySKZSiOeSCEaTyCy
        G2vANgMhrG8GsLq+iT7PgAW1yysPWCA1yngiErbLly4h8xaWIiKMBUTY2sYWVtY2sLSyhoWlFfz/vJtA
        5vRHIcl/ulggLA7nfBUb+bIkJOzDh4+4urpCWd7b2Aq2wGYlNW+HhnHv7weEdlkwRnfBkidM5avSlK8s
        81WHUULmi5Hpli+UsLy6jsXlVcwvLivYlOw54h/H4yfPCGTL3GkUCgHVgzqM+eIGhBlSHEmDxdGar4+f
        Ppm4umVyecwtLGFGWomwiakZ+Eb8eP6yx8plJ4Hefs+gknNfLw5ZrGC/KI73IqtuKSPdgI1JAb7zjeBF
        92swZWQRaExMzkgeBFbSKlEVR1rlS4dZxWFVIvN1Li2kG9Xwj08qOd+88ymgKatBoJw4rDVzTv1ttUKh
        aFaoijgrEWSQkFzGE0nE5CC7sbgcJorPn7+YuLpF5fnQ8Cg8MhIJfPbfCyWrAm7Jia1mZnS3ZYzQ3edp
        BW6IPFZx0G/LGOHLV65WIPtHLw5Gag0AtgonDnuThcX+ZN+VRO6iDISCyJ+XvF9eXpqYum2HI+hx9SpY
        M9DwDfttkyMU3vnp5GB/Tc/OY3J6FuOT06o4anIo3UICe+3ua8DoetF4eZJm2M8mh1XyhI3Kt5AK6BaS
        Auxx2WF0vS1U43PCE8Z/CWPJ65NDb2b2lxMsEAzJp8ndArM1vjneLlzufhUJ+0uPipOjWcLh0TE1QXRb
        FzWaQZbbRpsJ7OKA5Un4HeN0YCSMygnGgdzvHZQWyuHr129tYdzTNrxpJIurK4XToj9xM3f2zxNNHqgP
        MMN3Wvg7bkpJd77fyA+qgB49fuq4wU2ce5iw691rKAX1d9qsnXONKeOvYZbJi+qayGRTluuA+Q7fNQvk
        +tdEy2SB7SLMU3NDjijd+UyL6PcuwrpxsThlvoWrfkfHd36J43qfO2zHAAAAAElFTkSuQmCC
</value>
  </data>
</root>